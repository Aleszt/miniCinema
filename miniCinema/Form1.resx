<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        hB76fwrfE9Z9yzk8AAAAAElFTkSuQmCC
</value>
  </data>
</root>