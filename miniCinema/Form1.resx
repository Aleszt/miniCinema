<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAASUVORK5CYII=
</value>
  </data>
  <metadata name="ID.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Cliente.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Pelicula.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Fecha.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Regresar.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <data name="Regresar.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAA
        dgAAAHYBTnsmCAAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAAFISURBVDhPhdPN
        K0RRGMfx63VoyPsG2WHDUilZyUZNMnZCZmEpC+KfkLKQjb0Nw4o/QM3S7Cgz1JTXKZvBQhHf33FPHXfu
        Nb/61LlnOnPmee4zXkQaMYkUFjCOWlRMG7bxhg8UcI8vPGIGSj32MWWe/Awij2vMIQ6bdixjFDp8gif0
        w6QDtzhFkzYiUodjPGNIGzZ7uIR7azCRh1uhem19YdHhNMoOK7MoQbWFpQYHKMIersYD1DdvHRda+FGj
        NlAF3XyEsJtfMa3FGrJa+BnBO3ZwCPdmN3rVCS2SCJagwdENOjysjUD68A3zWQvURH2Rm150/i7LsgkN
        mco02cUV/psBmx68YNU8+dGk3eAMzdqISDfU8HOowX8ygBw0zvNwf41KWYHeRgZdCI2GagtqoP0z3eET
        aqhqj6FiGjCBJSxiDBqoQDzvB06ZQPo6JWicAAAAAElFTkSuQmCC
</value>
  </data>
</root>